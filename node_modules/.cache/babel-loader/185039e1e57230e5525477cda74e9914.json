{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cafieness/Desktop/FMS-TEAM4/app/src/pages/Overview/Overview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from '../../components/useTable';\nimport * as Service from '../../services/Service';\nimport Income from './Income';\nimport Expense from './Expense';\nimport Transfer from './Transfer';\nimport './Overview.scss';\nimport Controls from '../../components/controls/Controls';\nimport { Search } from '@material-ui/icons';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from '../../components/Popup';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nconst headCells = [{\n  id: 'date',\n  label: 'Дата'\n}, {\n  id: 'type',\n  label: 'Тип'\n}, {\n  id: 'money',\n  label: 'Сумма'\n}, {\n  id: 'balanceId',\n  label: 'Счет'\n}, {\n  id: 'categoryId',\n  label: 'Категория'\n}, {\n  id: 'contractorId',\n  label: 'Контрагент'\n}, {\n  id: 'projectId',\n  label: 'Проект'\n}];\nexport default function Overview() {\n  _s();\n\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState(Service.getAllTransactions());\n  const [openTransfer, setOpenTransfer] = useState(false);\n  const [openExpense, setOpenExpense] = useState(false);\n  const [openIncome, setOpenIncome] = useState(false);\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells);\n\n  const addOrEdit = (transaction, resetForm) => {\n    if (transaction.id == 0) Service.insertTransaction(transaction);else Service.updateTransaction(transaction);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenExpense(false);\n    setOpenTransfer(false);\n    setOpenIncome(false);\n    setRecords(Service.getAllTransactions());\n  };\n\n  const getCollection = (itemId, collection) => {\n    if (itemId != undefined && itemId != '') {\n      return collection[itemId - 1].title;\n    } else {\n      return '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n        text: \"\\u0414\\u043E\\u0445\\u043E\\u0434\",\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 22\n        }, this),\n        onClick: () => {\n          setOpenIncome(true);\n          setRecordForEdit(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n        text: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\",\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 22\n        }, this),\n        onClick: () => {\n          setOpenExpense(true);\n          setRecordForEdit(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n        text: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\",\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this),\n        onClick: () => {\n          setOpenTransfer(true);\n          setRecordForEdit(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.date.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.money\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: getCollection(item.balance, Service.getBalanceCollection())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: getCollection(item.categoryId, Service.getCategoryCollection())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: getCollection(item.contractorId, Service.getContractorCollection())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: getCollection(item.projectId, Service.getProjectCollection())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"\\u0414\\u043E\\u0445\\u043E\\u0434\",\n      openPopup: openIncome,\n      setOpenPopup: setOpenIncome,\n      children: /*#__PURE__*/_jsxDEV(Income, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\",\n      openPopup: openExpense,\n      setOpenPopup: setOpenExpense,\n      children: /*#__PURE__*/_jsxDEV(Expense, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\",\n      openPopup: openTransfer,\n      setOpenPopup: setOpenTransfer,\n      children: /*#__PURE__*/_jsxDEV(Transfer, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Overview, \"tnMdr0J7w3jI4xbaUKgIgumzg8E=\", false, function () {\n  return [useTable];\n});\n\n_c = Overview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"sources":["/home/cafieness/Desktop/FMS-TEAM4/app/src/pages/Overview/Overview.js"],"names":["React","useState","PeopleOutlineTwoToneIcon","Paper","makeStyles","TableBody","TableRow","TableCell","Toolbar","InputAdornment","useTable","Service","Income","Expense","Transfer","Controls","Search","AddIcon","Popup","EditOutlinedIcon","CloseIcon","headCells","id","label","Overview","recordForEdit","setRecordForEdit","records","setRecords","getAllTransactions","openTransfer","setOpenTransfer","openExpense","setOpenExpense","openIncome","setOpenIncome","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","addOrEdit","transaction","resetForm","insertTransaction","updateTransaction","getCollection","itemId","collection","undefined","title","map","item","date","substring","type","money","balance","getBalanceCollection","categoryId","getCategoryCollection","contractorId","getContractorCollection","projectId","getProjectCollection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport {\n  Paper,\n  makeStyles,\n  TableBody,\n  TableRow,\n  TableCell,\n  Toolbar,\n  InputAdornment,\n} from '@material-ui/core';\nimport useTable from '../../components/useTable';\nimport * as Service from '../../services/Service';\nimport Income from './Income';\nimport Expense from './Expense';\nimport Transfer from './Transfer';\nimport './Overview.scss';\n\nimport Controls from '../../components/controls/Controls';\nimport { Search } from '@material-ui/icons';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from '../../components/Popup';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst headCells = [\n  { id: 'date', label: 'Дата' },\n  { id: 'type', label: 'Тип' },\n  { id: 'money', label: 'Сумма' },\n  { id: 'balanceId', label: 'Счет' },\n  { id: 'categoryId', label: 'Категория' },\n  { id: 'contractorId', label: 'Контрагент' },\n  { id: 'projectId', label: 'Проект' },\n];\n\nexport default function Overview() {\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState(Service.getAllTransactions());\n  const [openTransfer, setOpenTransfer] = useState(false);\n  const [openExpense, setOpenExpense] = useState(false);\n  const [openIncome, setOpenIncome] = useState(false);\n\n  const { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting } = useTable(\n    records,\n    headCells,\n  );\n\n  const addOrEdit = (transaction, resetForm) => {\n    if (transaction.id == 0) Service.insertTransaction(transaction);\n    else Service.updateTransaction(transaction);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenExpense(false);\n    setOpenTransfer(false);\n    setOpenIncome(false);\n    setRecords(Service.getAllTransactions());\n  };\n  const getCollection = (itemId, collection) => {\n    if (itemId != undefined && itemId != '') {\n      return collection[itemId - 1].title;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <>\n      <Toolbar>\n        <Controls.Button\n          text=\"Доход\"\n          variant=\"outlined\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            setOpenIncome(true);\n            setRecordForEdit(null);\n          }}\n        />\n        <Controls.Button\n          text=\"Расход\"\n          variant=\"outlined\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            setOpenExpense(true);\n            setRecordForEdit(null);\n          }}\n        />\n        <Controls.Button\n          text=\"Перевод\"\n          variant=\"outlined\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            setOpenTransfer(true);\n            setRecordForEdit(null);\n          }}\n        />\n      </Toolbar>\n      <TblContainer>\n        <TblHead />\n        <TableBody>\n          {recordsAfterPagingAndSorting().map((item) => (\n            <TableRow key={item.id}>\n              <TableCell>{item.date.substring(0, 10)}</TableCell>\n              <TableCell>{item.type}</TableCell>\n              <TableCell>{item.money}</TableCell>\n              <TableCell>{getCollection(item.balance, Service.getBalanceCollection())}</TableCell>\n              <TableCell>\n                {getCollection(item.categoryId, Service.getCategoryCollection())}\n              </TableCell>\n              <TableCell>\n                {getCollection(item.contractorId, Service.getContractorCollection())}\n              </TableCell>\n              <TableCell>{getCollection(item.projectId, Service.getProjectCollection())}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </TblContainer>\n      <TblPagination />\n      <Popup title=\"Доход\" openPopup={openIncome} setOpenPopup={setOpenIncome}>\n        <Income recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\n      </Popup>\n      <Popup title=\"Расход\" openPopup={openExpense} setOpenPopup={setOpenExpense}>\n        <Expense recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\n      </Popup>\n      <Popup title=\"Перевод\" openPopup={openTransfer} setOpenPopup={setOpenTransfer}>\n        <Transfer recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\n      </Popup>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}