{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cafieness/Desktop/FMS-TEAM4/app/src/pages/Overview/EmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from '../../components/controls/Controls';\nimport { useForm, Form } from '../../components/useForm';\nimport * as Service from '../../services/Service';\nconst genderItems = [{\n  id: 'male',\n  title: 'Male'\n}, {\n  id: 'female',\n  title: 'Female'\n}, {\n  id: 'other',\n  title: 'Other'\n}];\nconst initialFValues = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false\n};\nexport default function EmployeeForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? '' : 'Email is not valid.';\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required.';\n    if ('departmentId' in fieldValues) temp.departmentId = fieldValues.departmentId.length != 0 ? '' : 'This field is required.';\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == '');\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) setValues({ ...recordForEdit\n    });\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"fullName\",\n          label: \"Full Name\",\n          value: values.fullName,\n          onChange: handleInputChange,\n          error: errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Email\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Mobile\",\n          name: \"mobile\",\n          value: values.mobile,\n          onChange: handleInputChange,\n          error: errors.mobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"City\",\n          name: \"city\",\n          value: values.city,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          name: \"gender\",\n          label: \"Gender\",\n          value: values.gender,\n          onChange: handleInputChange,\n          items: genderItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n          name: \"departmentId\",\n          label: \"Department\",\n          value: values.departmentId,\n          onChange: handleInputChange,\n          options: Service.getDepartmentCollection(),\n          error: errors.departmentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.DatePicker, {\n          name: \"hireDate\",\n          label: \"Hire Date\",\n          value: values.hireDate,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n          name: \"isPermanent\",\n          label: \"Permanent Employee\",\n          value: values.isPermanent,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            text: \"Reset\",\n            color: \"default\",\n            onClick: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmployeeForm, \"sJzGov1Odg1EgrLIbXOUBBZnNQ0=\", false, function () {\n  return [useForm];\n});\n\n_c = EmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"sources":["/home/cafieness/Desktop/FMS-TEAM4/app/src/pages/Overview/EmployeeForm.js"],"names":["React","useState","useEffect","Grid","Controls","useForm","Form","Service","genderItems","id","title","initialFValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeeForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","getDepartmentCollection"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,0BAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFkB,EAGlB;AAAED,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHkB,CAApB;AAMA,MAAMC,cAAc,GAAG;AACrBF,EAAAA,EAAE,EAAE,CADiB;AAErBG,EAAAA,QAAQ,EAAE,EAFW;AAGrBC,EAAAA,KAAK,EAAE,EAHc;AAIrBC,EAAAA,MAAM,EAAE,EAJa;AAKrBC,EAAAA,IAAI,EAAE,EALe;AAMrBC,EAAAA,MAAM,EAAE,MANa;AAOrBC,EAAAA,YAAY,EAAE,EAPO;AAQrBC,EAAAA,QAAQ,EAAE,IAAIC,IAAJ,EARW;AASrBC,EAAAA,WAAW,EAAE;AATQ,CAAvB;AAYA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA+BF,KAArC;;AAEA,QAAMG,QAAQ,GAAG,CAACC,WAAW,GAAGC,MAAf,KAA0B;AACzC,QAAIC,IAAI,GAAG,EAAE,GAAGC;AAAL,KAAX;AACA,QAAI,cAAcH,WAAlB,EACEE,IAAI,CAAChB,QAAL,GAAgBc,WAAW,CAACd,QAAZ,GAAuB,EAAvB,GAA4B,yBAA5C;AACF,QAAI,WAAWc,WAAf,EACEE,IAAI,CAACf,KAAL,GAAa,cAAciB,IAAd,CAAmBJ,WAAW,CAACb,KAA/B,IAAwC,EAAxC,GAA6C,qBAA1D;AACF,QAAI,YAAYa,WAAhB,EACEE,IAAI,CAACd,MAAL,GAAcY,WAAW,CAACZ,MAAZ,CAAmBiB,MAAnB,GAA4B,CAA5B,GAAgC,EAAhC,GAAqC,8BAAnD;AACF,QAAI,kBAAkBL,WAAtB,EACEE,IAAI,CAACX,YAAL,GAAoBS,WAAW,CAACT,YAAZ,CAAyBc,MAAzB,IAAmC,CAAnC,GAAuC,EAAvC,GAA4C,yBAAhE;AACFC,IAAAA,SAAS,CAAC,EACR,GAAGJ;AADK,KAAD,CAAT;AAIA,QAAIF,WAAW,IAAIC,MAAnB,EAA2B,OAAOM,MAAM,CAACN,MAAP,CAAcC,IAAd,EAAoBM,KAApB,CAA2BC,CAAD,IAAOA,CAAC,IAAI,EAAtC,CAAP;AAC5B,GAfD;;AAiBA,QAAM;AAAER,IAAAA,MAAF;AAAUS,IAAAA,SAAV;AAAqBP,IAAAA,MAArB;AAA6BG,IAAAA,SAA7B;AAAwCK,IAAAA,iBAAxC;AAA2DC,IAAAA;AAA3D,MAAyEjC,OAAO,CACpFM,cADoF,EAEpF,IAFoF,EAGpFc,QAHoF,CAAtF;;AAMA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIhB,QAAQ,EAAZ,EAAgB;AACdF,MAAAA,SAAS,CAACI,MAAD,EAASW,SAAT,CAAT;AACD;AACF,GALD;;AAOApC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,aAAa,IAAI,IAArB,EACEY,SAAS,CAAC,EACR,GAAGZ;AADK,KAAD,CAAT;AAGH,GALQ,EAKN,CAACA,aAAD,CALM,CAAT;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEe,YAAhB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,WAFR;AAGE,UAAA,KAAK,EAAEZ,MAAM,CAACf,QAHhB;AAIE,UAAA,QAAQ,EAAEyB,iBAJZ;AAKE,UAAA,KAAK,EAAER,MAAM,CAACjB;AALhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,KAAK,EAAC,OADR;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAEe,MAAM,CAACd,KAHhB;AAIE,UAAA,QAAQ,EAAEwB,iBAJZ;AAKE,UAAA,KAAK,EAAER,MAAM,CAAChB;AALhB;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,KAAK,EAAC,QADR;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAEc,MAAM,CAACb,MAHhB;AAIE,UAAA,QAAQ,EAAEuB,iBAJZ;AAKE,UAAA,KAAK,EAAER,MAAM,CAACf;AALhB;AAAA;AAAA;AAAA;AAAA,gBAfF,eAsBE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEa,MAAM,CAACZ,IAHhB;AAIE,UAAA,QAAQ,EAAEsB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACE,QAAC,QAAD,CAAU,UAAV;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,KAAK,EAAEV,MAAM,CAACX,MAHhB;AAIE,UAAA,QAAQ,EAAEqB,iBAJZ;AAKE,UAAA,KAAK,EAAE7B;AALT;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,QAAD,CAAU,MAAV;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,KAAK,EAAC,YAFR;AAGE,UAAA,KAAK,EAAEmB,MAAM,CAACV,YAHhB;AAIE,UAAA,QAAQ,EAAEoB,iBAJZ;AAKE,UAAA,OAAO,EAAE9B,OAAO,CAACmC,uBAAR,EALX;AAME,UAAA,KAAK,EAAEb,MAAM,CAACZ;AANhB;AAAA;AAAA;AAAA;AAAA,gBARF,eAgBE,QAAC,QAAD,CAAU,UAAV;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,WAFR;AAGE,UAAA,KAAK,EAAEU,MAAM,CAACT,QAHhB;AAIE,UAAA,QAAQ,EAAEmB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAsBE,QAAC,QAAD,CAAU,QAAV;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,KAAK,EAAC,oBAFR;AAGE,UAAA,KAAK,EAAEV,MAAM,CAACP,WAHhB;AAIE,UAAA,QAAQ,EAAEiB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAtBF,eA6BE;AAAA,kCACE,QAAC,QAAD,CAAU,MAAV;AAAiB,YAAA,IAAI,EAAC,QAAtB;AAA+B,YAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD,CAAU,MAAV;AAAiB,YAAA,IAAI,EAAC,OAAtB;AAA8B,YAAA,KAAK,EAAC,SAApC;AAA8C,YAAA,OAAO,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqED;;GA7GuBjB,Y;UAoByDhB,O;;;KApBzDgB,Y","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from '../../components/controls/Controls';\nimport { useForm, Form } from '../../components/useForm';\nimport * as Service from '../../services/Service';\n\nconst genderItems = [\n  { id: 'male', title: 'Male' },\n  { id: 'female', title: 'Female' },\n  { id: 'other', title: 'Other' },\n];\n\nconst initialFValues = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false,\n};\n\nexport default function EmployeeForm(props) {\n  const { addOrEdit, recordForEdit } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if ('fullName' in fieldValues)\n      temp.fullName = fieldValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldValues)\n      temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? '' : 'Email is not valid.';\n    if ('mobile' in fieldValues)\n      temp.mobile = fieldValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required.';\n    if ('departmentId' in fieldValues)\n      temp.departmentId = fieldValues.departmentId.length != 0 ? '' : 'This field is required.';\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '');\n  };\n\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } = useForm(\n    initialFValues,\n    true,\n    validate,\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            name=\"fullName\"\n            label=\"Full Name\"\n            value={values.fullName}\n            onChange={handleInputChange}\n            error={errors.fullName}\n          />\n          <Controls.Input\n            label=\"Email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n          <Controls.Input\n            label=\"Mobile\"\n            name=\"mobile\"\n            value={values.mobile}\n            onChange={handleInputChange}\n            error={errors.mobile}\n          />\n          <Controls.Input\n            label=\"City\"\n            name=\"city\"\n            value={values.city}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.RadioGroup\n            name=\"gender\"\n            label=\"Gender\"\n            value={values.gender}\n            onChange={handleInputChange}\n            items={genderItems}\n          />\n          <Controls.Select\n            name=\"departmentId\"\n            label=\"Department\"\n            value={values.departmentId}\n            onChange={handleInputChange}\n            options={Service.getDepartmentCollection()}\n            error={errors.departmentId}\n          />\n          <Controls.DatePicker\n            name=\"hireDate\"\n            label=\"Hire Date\"\n            value={values.hireDate}\n            onChange={handleInputChange}\n          />\n          <Controls.Checkbox\n            name=\"isPermanent\"\n            label=\"Permanent Employee\"\n            value={values.isPermanent}\n            onChange={handleInputChange}\n          />\n\n          <div>\n            <Controls.Button type=\"submit\" text=\"Submit\" />\n            <Controls.Button text=\"Reset\" color=\"default\" onClick={resetForm} />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}