{"ast":null,"code":"var _jsxFileName = \"/home/cafieness/Desktop/FMS-TEAM4/app/src/pages/Employees/EmployeeForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\nconst genderItems = [{\n  id: 'male',\n  title: 'Male'\n}, {\n  id: 'female',\n  title: 'Female'\n}, {\n  id: 'other',\n  title: 'Other'\n}];\nconst initialFValues = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false\n};\nexport default function EmployeeForm(props) {\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    if ('departmentId' in fieldValues) temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) setValues({ ...recordForEdit\n    });\n  }, [recordForEdit]);\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    name: \"fullName\",\n    label: \"Full Name\",\n    value: values.fullName,\n    onChange: handleInputChange,\n    error: errors.fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Email\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleInputChange,\n    error: errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Mobile\",\n    name: \"mobile\",\n    value: values.mobile,\n    onChange: handleInputChange,\n    error: errors.mobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"City\",\n    name: \"city\",\n    value: values.city,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.RadioGroup, {\n    name: \"gender\",\n    label: \"Gender\",\n    value: values.gender,\n    onChange: handleInputChange,\n    items: genderItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Select, {\n    name: \"departmentId\",\n    label: \"Department\",\n    value: values.departmentId,\n    onChange: handleInputChange,\n    options: employeeService.getDepartmentCollection(),\n    error: errors.departmentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.DatePicker, {\n    name: \"hireDate\",\n    label: \"Hire Date\",\n    value: values.hireDate,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Checkbox, {\n    name: \"isPermanent\",\n    label: \"Permanent Employee\",\n    value: values.isPermanent,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Button, {\n    type: \"submit\",\n    text: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Button, {\n    text: \"Reset\",\n    color: \"default\",\n    onClick: resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/cafieness/Desktop/FMS-TEAM4/app/src/pages/Employees/EmployeeForm.js"],"names":["React","useState","useEffect","Grid","Controls","useForm","Form","employeeService","genderItems","id","title","initialFValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeeForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","getDepartmentCollection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,0BAA9B;AACA,OAAO,KAAKC,eAAZ,MAAiC,gCAAjC;AAGA,MAAMC,WAAW,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADgB,EAEhB;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFgB,EAGhB;AAAED,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHgB,CAApB;AAMA,MAAMC,cAAc,GAAG;AACnBF,EAAAA,EAAE,EAAE,CADe;AAEnBG,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,IAAI,EAAE,EALa;AAMnBC,EAAAA,MAAM,EAAE,MANW;AAOnBC,EAAAA,YAAY,EAAE,EAPK;AAQnBC,EAAAA,QAAQ,EAAE,IAAIC,IAAJ,EARS;AASnBC,EAAAA,WAAW,EAAE;AATM,CAAvB;AAYA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA+BF,KAArC;;AAEA,QAAMG,QAAQ,GAAG,CAACC,WAAW,GAAGC,MAAf,KAA0B;AACvC,QAAIC,IAAI,GAAG,EAAE,GAAGC;AAAL,KAAX;AACA,QAAI,cAAcH,WAAlB,EACIE,IAAI,CAAChB,QAAL,GAAgBc,WAAW,CAACd,QAAZ,GAAuB,EAAvB,GAA4B,yBAA5C;AACJ,QAAI,WAAWc,WAAf,EACIE,IAAI,CAACf,KAAL,GAAc,aAAD,CAAgBiB,IAAhB,CAAqBJ,WAAW,CAACb,KAAjC,IAA0C,EAA1C,GAA+C,qBAA5D;AACJ,QAAI,YAAYa,WAAhB,EACIE,IAAI,CAACd,MAAL,GAAcY,WAAW,CAACZ,MAAZ,CAAmBiB,MAAnB,GAA4B,CAA5B,GAAgC,EAAhC,GAAqC,8BAAnD;AACJ,QAAI,kBAAkBL,WAAtB,EACIE,IAAI,CAACX,YAAL,GAAoBS,WAAW,CAACT,YAAZ,CAAyBc,MAAzB,IAAmC,CAAnC,GAAuC,EAAvC,GAA4C,yBAAhE;AACJC,IAAAA,SAAS,CAAC,EACN,GAAGJ;AADG,KAAD,CAAT;AAIA,QAAIF,WAAW,IAAIC,MAAnB,EACI,OAAOM,MAAM,CAACN,MAAP,CAAcC,IAAd,EAAoBM,KAApB,CAA0BC,CAAC,IAAIA,CAAC,IAAI,EAApC,CAAP;AACP,GAhBD;;AAkBA,QAAM;AACFR,IAAAA,MADE;AAEFS,IAAAA,SAFE;AAGFP,IAAAA,MAHE;AAIFG,IAAAA,SAJE;AAKFK,IAAAA,iBALE;AAMFC,IAAAA;AANE,MAOFjC,OAAO,CAACM,cAAD,EAAiB,IAAjB,EAAuBc,QAAvB,CAPX;;AASA,QAAMc,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIhB,QAAQ,EAAZ,EAAgB;AACZF,MAAAA,SAAS,CAACI,MAAD,EAASW,SAAT,CAAT;AACH;AACJ,GALD;;AAOApC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,aAAa,IAAI,IAArB,EACIY,SAAS,CAAC,EACN,GAAGZ;AADG,KAAD,CAAT;AAGP,GALQ,EAKN,CAACA,aAAD,CALM,CAAT;AAOA,sBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEe,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD,CAAU,KAAV;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,KAAK,EAAEZ,MAAM,CAACf,QAHlB;AAII,IAAA,QAAQ,EAAEyB,iBAJd;AAKI,IAAA,KAAK,EAAER,MAAM,CAACjB,QALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,QAAD,CAAU,KAAV;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAEe,MAAM,CAACd,KAHlB;AAII,IAAA,QAAQ,EAAEwB,iBAJd;AAKI,IAAA,KAAK,EAAER,MAAM,CAAChB,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAeI,oBAAC,QAAD,CAAU,KAAV;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,KAAK,EAAEc,MAAM,CAACb,MAHlB;AAII,IAAA,QAAQ,EAAEuB,iBAJd;AAKI,IAAA,KAAK,EAAER,MAAM,CAACf,MALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAsBI,oBAAC,QAAD,CAAU,KAAV;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEa,MAAM,CAACZ,IAHlB;AAII,IAAA,QAAQ,EAAEsB,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ,eA+BI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD,CAAU,UAAV;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,KAAK,EAAEV,MAAM,CAACX,MAHlB;AAII,IAAA,QAAQ,EAAEqB,iBAJd;AAKI,IAAA,KAAK,EAAE7B,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,QAAD,CAAU,MAAV;AACI,IAAA,IAAI,EAAC,cADT;AAEI,IAAA,KAAK,EAAC,YAFV;AAGI,IAAA,KAAK,EAAEmB,MAAM,CAACV,YAHlB;AAII,IAAA,QAAQ,EAAEoB,iBAJd;AAKI,IAAA,OAAO,EAAE9B,eAAe,CAACmC,uBAAhB,EALb;AAMI,IAAA,KAAK,EAAEb,MAAM,CAACZ,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAgBI,oBAAC,QAAD,CAAU,UAAV;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,KAAK,EAAEU,MAAM,CAACT,QAHlB;AAII,IAAA,QAAQ,EAAEmB,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,eAsBI,oBAAC,QAAD,CAAU,QAAV;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,KAAK,EAAC,oBAFV;AAGI,IAAA,KAAK,EAAEV,MAAM,CAACP,WAHlB;AAII,IAAA,QAAQ,EAAEiB,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD,CAAU,MAAV;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,QAAD,CAAU,MAAV;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,OAAO,EAAEC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CA7BJ,CA/BJ,CADJ,CADJ;AA2EH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\n\n\nconst genderItems = [\n    { id: 'male', title: 'Male' },\n    { id: 'female', title: 'Female' },\n    { id: 'other', title: 'Other' },\n]\n\nconst initialFValues = {\n    id: 0,\n    fullName: '',\n    email: '',\n    mobile: '',\n    city: '',\n    gender: 'male',\n    departmentId: '',\n    hireDate: new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeeForm(props) {\n    const { addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\n        if ('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() => {\n        if (recordForEdit != null)\n            setValues({\n                ...recordForEdit\n            })\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                    <Controls.Input\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n                    <Controls.Input\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        error={errors.mobile}\n                    />\n                    <Controls.Input\n                        label=\"City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                    />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}