{"ast":null,"code":"const KEYS = {\n  transactions: '',\n  transactionId: ''\n};\nexport const getBalanceCollection = () => [{\n  id: '1',\n  title: 'Юр. карта'\n}, {\n  id: '2',\n  title: 'KICB элсом'\n}, {\n  id: '3',\n  title: 'Demir'\n}, {\n  id: '4',\n  title: 'Optima'\n}];\nexport const getCategoryCollection = () => [{\n  id: '1',\n  title: 'Проект'\n}, {\n  id: '2',\n  title: 'Курсы'\n}, {\n  id: '3',\n  title: 'Офис'\n}, {\n  id: '4',\n  title: 'Оборудование'\n}];\nexport const getContractorCollection = () => [{\n  id: '1',\n  title: 'Айдана'\n}, {\n  id: '2',\n  title: 'Медина'\n}, {\n  id: '3',\n  title: 'Санира'\n}];\nexport const getProjectCollection = () => [{\n  id: '1',\n  title: 'FMS'\n}, {\n  id: '2',\n  title: 'NeoHP'\n}, {\n  id: '3',\n  title: 'NeoStats'\n}];\nexport function insertTransaction(data) {\n  let transactions = getAllTransactions();\n  data['id'] = generateTransactionId();\n  transactions.push(data);\n  localStorage.setItem(KEYS.transactions, JSON.stringify(transactions));\n}\nexport function updateTransaction(data) {\n  let transactions = getAllTransactions();\n  let recordIndex = transactions.findIndex(x => x.id == data.id);\n  transactions[recordIndex] = { ...data\n  };\n  localStorage.setItem(KEYS.transactions, JSON.stringify(transactions));\n}\nexport function generateTransactionId() {\n  if (localStorage.getItem(KEYS.transactionId) == null) localStorage.setItem(KEYS.transactionId, '0');\n  var id = parseInt(localStorage.getItem(KEYS.transactionId));\n  localStorage.setItem(KEYS.transactionId, (++id).toString());\n  return id;\n}\nexport function getAllTransactions() {\n  if (localStorage.getItem(KEYS.transactions) == null) localStorage.setItem(KEYS.transactions, JSON.stringify([]));\n  let transactions = JSON.parse(localStorage.getItem(KEYS.transactions)); //map departmentID to department title\n\n  let contractors = getContractorCollection();\n  return transactions.map(x => ({ ...x,\n    balance: contractors[x.contractorId - 1].title\n  }));\n}","map":{"version":3,"sources":["/home/cafieness/Desktop/FMS-TEAM4/app/src/services/Service.js"],"names":["KEYS","transactions","transactionId","getBalanceCollection","id","title","getCategoryCollection","getContractorCollection","getProjectCollection","insertTransaction","data","getAllTransactions","generateTransactionId","push","localStorage","setItem","JSON","stringify","updateTransaction","recordIndex","findIndex","x","getItem","parseInt","toString","parse","contractors","map","balance","contractorId"],"mappings":"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","sourcesContent":["const KEYS = {\n  transactions: '',\n  transactionId: '',\n};\nexport const getBalanceCollection = () => [\n  { id: '1', title: 'Юр. карта' },\n  { id: '2', title: 'KICB элсом' },\n  { id: '3', title: 'Demir' },\n  { id: '4', title: 'Optima' },\n];\nexport const getCategoryCollection = () => [\n  { id: '1', title: 'Проект' },\n  { id: '2', title: 'Курсы' },\n  { id: '3', title: 'Офис' },\n  { id: '4', title: 'Оборудование' },\n];\nexport const getContractorCollection = () => [\n  { id: '1', title: 'Айдана' },\n  { id: '2', title: 'Медина' },\n  { id: '3', title: 'Санира' },\n];\nexport const getProjectCollection = () => [\n  { id: '1', title: 'FMS' },\n  { id: '2', title: 'NeoHP' },\n  { id: '3', title: 'NeoStats' },\n];\n\nexport function insertTransaction(data) {\n  let transactions = getAllTransactions();\n  data['id'] = generateTransactionId();\n  transactions.push(data);\n  localStorage.setItem(KEYS.transactions, JSON.stringify(transactions));\n}\nexport function updateTransaction(data) {\n  let transactions = getAllTransactions();\n  let recordIndex = transactions.findIndex((x) => x.id == data.id);\n  transactions[recordIndex] = { ...data };\n  localStorage.setItem(KEYS.transactions, JSON.stringify(transactions));\n}\n\nexport function generateTransactionId() {\n  if (localStorage.getItem(KEYS.transactionId) == null)\n    localStorage.setItem(KEYS.transactionId, '0');\n  var id = parseInt(localStorage.getItem(KEYS.transactionId));\n  localStorage.setItem(KEYS.transactionId, (++id).toString());\n  return id;\n}\n\nexport function getAllTransactions() {\n  if (localStorage.getItem(KEYS.transactions) == null)\n    localStorage.setItem(KEYS.transactions, JSON.stringify([]));\n  let transactions = JSON.parse(localStorage.getItem(KEYS.transactions));\n  //map departmentID to department title\n  let contractors = getContractorCollection();\n  return transactions.map((x) => ({\n    ...x,\n    balance: contractors[x.contractorId - 1].title,\n  }));\n}\n"]},"metadata":{},"sourceType":"module"}